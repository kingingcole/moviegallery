[{"C:\\Users\\oat techs\\Documents\\GitHub\\moviegallery\\movie-gallery\\src\\index.js":"1","C:\\Users\\oat techs\\Documents\\GitHub\\moviegallery\\movie-gallery\\src\\App.js":"2","C:\\Users\\oat techs\\Documents\\GitHub\\moviegallery\\movie-gallery\\src\\reportWebVitals.js":"3","C:\\Users\\oat techs\\Documents\\GitHub\\moviegallery\\movie-gallery\\src\\components\\Moviegallery.js":"4","C:\\Users\\oat techs\\Documents\\GitHub\\moviegallery\\movie-gallery\\src\\components\\Discover.js":"5","C:\\Users\\oat techs\\Documents\\GitHub\\moviegallery\\movie-gallery\\src\\components\\Navbar.js":"6","C:\\Users\\oat techs\\Documents\\GitHub\\moviegallery\\movie-gallery\\src\\components\\Movie.js":"7"},{"size":500,"mtime":499162500000,"results":"8","hashOfConfig":"9"},{"size":190,"mtime":1607468678533,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":591,"mtime":1607468043824,"results":"12","hashOfConfig":"9"},{"size":2748,"mtime":1607468009074,"results":"13","hashOfConfig":"9"},{"size":1138,"mtime":1607468046863,"results":"14","hashOfConfig":"9"},{"size":1140,"mtime":1607468028364,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1pd2g7j",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},"C:\\Users\\oat techs\\Documents\\GitHub\\moviegallery\\movie-gallery\\src\\index.js",[],["34","35"],"C:\\Users\\oat techs\\Documents\\GitHub\\moviegallery\\movie-gallery\\src\\App.js",[],"C:\\Users\\oat techs\\Documents\\GitHub\\moviegallery\\movie-gallery\\src\\reportWebVitals.js",[],"C:\\Users\\oat techs\\Documents\\GitHub\\moviegallery\\movie-gallery\\src\\components\\Moviegallery.js",[],"C:\\Users\\oat techs\\Documents\\GitHub\\moviegallery\\movie-gallery\\src\\components\\Discover.js",["36","37"],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\n\r\nconst Discover_API = \"https://api.themoviedb.org/3/discover/movie/?sort_by=popularity.desc&api_key=a87b0d8312b2607eead7733f9b32be5e\"\r\nconst Popular_API = \"https://api.themoviedb.org/3/movie/popular?&api_key=a87b0d8312b2607eead7733f9b32be5e\"\r\nconst Search_API  = \"https://api.themoviedb.org/3/search/movie?api_key=a87b0d8312b2607eead7733f9b32be5e\"\r\nconst img_API =\"https://image.tmdb.org/t/p/w500\" \r\n\r\nconst Discover =() =>{\r\n    const [movies, setMovies] = useState([])\r\n    const [searchTerm, setSearchTerm] = useState(\"\")\r\n\r\n    const getMovies = (API) => {\r\n        axios.get(API)\r\n        .then(res=>{\r\n            setMovies(res.data.results.slice(0,3))\r\n            console.log(res)\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(() =>{\r\n        getMovies(Discover_API)\r\n    },[])\r\n\r\n    const handleChange =(e) =>{\r\n        setSearchTerm(e.target.value)\r\n    }\r\n\r\n     const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n\r\n        if(searchTerm){\r\n            getMovies(Search_API + searchTerm);\r\n\r\n            setSearchTerm(\"\");\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const movieList = movies.length ?( \r\n        movies.map(movie=>(\r\n            <div className=\"col s12 l6\">\r\n                <div className=\"card \" key={movie.id}>\r\n                    <div className=\"card-image\">\r\n                        <img className=\"img\" src={img_API + movie.poster_path} alt=\"movie image\"/>\r\n                    </div>\r\n                    <div className=\"card-content\">\r\n                       <a className=\"title blue-text text-darken-4\" href={\"/\" + movie.id}>Title: {movie.title}</a>\r\n                       <p>Release date: {movie.release_date}</p>\r\n                    </div>\r\n                    <div className=\"card-action\">\r\n                        <span className=\"indigo-text\">{movie.vote_average}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n         ) )\r\n    ) :(<div className=\"col s12\">\r\n          <h4 className=\"center white-text\">No movies yet</h4>\r\n       </div>\r\n      )\r\n\r\n    return (\r\n        <div className=\"container movies\">\r\n            <div className=\"row\">\r\n                <div className=\"col s12 l6 offset-l3\">\r\n                    <form onSubmit={handleSubmit}>\r\n                       <div className=\"input-field\">\r\n                          <input className=\"white-text\" onChange ={handleChange} type=\"text\"  id=\"search\" value={searchTerm}/>\r\n                          <label htmlFor=\"search\">Search movie</label>    \r\n                      </div>\r\n                    </form>\r\n                </div>\r\n                {movieList}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Discover\r\n  ","C:\\Users\\oat techs\\Documents\\GitHub\\moviegallery\\movie-gallery\\src\\components\\Navbar.js",["38"],"import React from 'react'\r\n\r\n\r\nconst Navbar =() => {\r\n    return (\r\n         <React.Fragment>\r\n            <nav className=\"nav-wraper indigo darken-4\">\r\n                <div className=\"container\">\r\n                    <a className=\"brand-logo \" href=\"/\">Moviegallery</a>\r\n                    <a className=\"sidenav-trigger\"  id=\"#\" data-target=\"mobile-links\">\r\n                      <i className=\"material-icons\">menu</i>\r\n                   </a>\r\n                    <ul className=\"right hide-on-med-and-down\">\r\n                        <li><a href=\"/discover\">Discover</a></li>\r\n                        <li><a href=\"/popular\">Popular</a></li>\r\n                        <li><a href=\"/toprated\">Top rated</a></li>\r\n \r\n                    </ul>  \r\n                </div>  \r\n                  <ul className=\"sidenav\"  id=\"mobile-links\">\r\n                        <li><a href=\"/\">Discover</a></li>\r\n                        <li><a href=\"/popular\">Popular</a></li>\r\n                        <li><a href=\"/toprated\">Top rated</a></li>\r\n                    </ul>  \r\n            </nav>  \r\n\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Navbar","C:\\Users\\oat techs\\Documents\\GitHub\\moviegallery\\movie-gallery\\src\\components\\Movie.js",["39"],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\n\r\nconst Discover_API = \"https://api.themoviedb.org/3/discover/movie/?sort_by=popularity.desc&api_key=a87b0d8312b2607eead7733f9b32be5e/\"\r\nconst img_API =\"https://image.tmdb.org/t/p/w500\" \r\n\r\n\r\nconst Movie =(props) =>{\r\n    const [movie, setMovie] = useState(null)\r\n\r\n    useEffect(() =>{\r\n        let id = props.match.params.movie_id\r\n        axios.get(Discover_API + id)\r\n        .then(res =>{\r\n            setMovie(res.data.result)\r\n            console.log(res)\r\n        })\r\n    })\r\n\r\n     const movieToRender = movie ?(\r\n         <div className=\"col s12 l10 offset-l1\">\r\n           <div className=\"card\">\r\n              <div className=\"card-content\">\r\n                 <span className=\"title\">{movie.title}</span>\r\n                 <p>{movie.overview}</p>\r\n              </div>\r\n         </div>\r\n         </div>\r\n\r\n     ) :(<div className=\"center\">Loading....</div>)\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                {movieToRender}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Movie\r\n",{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":5,"column":7,"nodeType":"46","messageId":"47","endLine":5,"endColumn":18},{"ruleId":"48","severity":1,"message":"49","line":51,"column":25,"nodeType":"50","endLine":51,"endColumn":99},{"ruleId":"51","severity":1,"message":"52","line":10,"column":21,"nodeType":"50","endLine":10,"endColumn":87},{"ruleId":"44","severity":1,"message":"53","line":5,"column":7,"nodeType":"46","messageId":"47","endLine":5,"endColumn":14},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"no-unused-vars","'Popular_API' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'img_API' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]